
<body>
    <section class="hero is-info is-medium">
        <div class="hero-head">
            {{> navbar}}
        </div>

        <div class="hero-body">
            <div class="container has-text-centered">
                <div class="columns is-centered">
                    <div class="column is-half">
                        <figure class="image is-128x128 is-inline-block">
                            <img class="is-rounded" src="{{avatar}}">
                        </figure>
                    </div>
                </div>

                <p class="title is-1">
                    m0uka
                </p>
                <p class="subtitle is-3">
                    Freelance Developer
                </p>

                <div class="columns is-centered">
                    <div class="column is-one-fifth">
                        <div class="columns is-mobile">
                            {{#each social}}
                            <div class="column">
                                <a href="{{path}}">
                                    <span class="icon has-text-white">
                                        {{#if isImage}}
                                        <img src="{{icon}}">
                                        {{else}}
                                        <i class="fab {{icon}} fa-2x"></i>
                                        {{/if}}
                                    </span>
                                </a>
                            </div>
                            {{/each}}
                        </div>
                    </div>

                </div>


            </div>
        </div>
    </section>

    <section class="section has-background-light">
        <div class="container has-text-centered">
            {{> stats}}
        </div>
    </section>

    <section class="section">
        <div class="container has-text-centered">
            <h1 class="title">
                About me
            </h1>

            <p>
                {{{about}}}
            </p>
        </div>
    </section>

    <section id="skills" class="section is-paddingless">

        <div class="container has-text-centered">

            <h1 class="title">
                Skills
            </h1>
            <p class="subtitle">
                How experienced am I?
            </p>

            <div class="columns is-centered has-text-left">
                <div class="column is-one-third">
                    {{> skills title="Languages" skills=this.languages}}
                </div>

                <div class="column is-one-third">
                    {{> skills title="Technologies" skills=this.tech}}
                </div>
            </div>
        </div>
    </section>

    <section id="projects" class="section">
        <div class="container has-text-centered">
            <h1 class="title">
                Projects
            </h1>

            <p class="subtitle">
                My projects/products.
            </p>

            <div class="columns is-multiline">
                {{#each projects}}
                <div class="column is-one-third">
                    {{> projectcard}}
                </div>
                {{/each}}
            </div>
        </div>

    </section>

</body>

<script>
    var ajax = {};
    ajax.x = function () {
        if (typeof XMLHttpRequest !== 'undefined') {
            return new XMLHttpRequest();
        }
        var versions = [
            "MSXML2.XmlHttp.6.0",
            "MSXML2.XmlHttp.5.0",
            "MSXML2.XmlHttp.4.0",
            "MSXML2.XmlHttp.3.0",
            "MSXML2.XmlHttp.2.0",
            "Microsoft.XmlHttp"
        ];

        var xhr;
        for (var i = 0; i < versions.length; i++) {
            try {
                xhr = new ActiveXObject(versions[i]);
                break;
            } catch (e) {
            }
        }
        return xhr;
    };

    ajax.send = function (url, callback, method, data, async) {
        if (async === undefined) {
            async = true;
        }
        var x = ajax.x();
        x.open(method, url, async);
        x.onreadystatechange = function () {
            if (x.readyState == 4) {
                callback(x.responseText)
            }
        };
        if (method == 'POST') {
            x.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
        }
        x.send(data)
    };

    ajax.get = function (url, data, callback, async) {
        var query = [];
        for (var key in data) {
            query.push(encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));
        }
        ajax.send(url + (query.length ? '?' + query.join('&') : ''), callback, 'GET', null, async)
    };

    ajax.post = function (url, data, callback, async) {
        var query = [];
        for (var key in data) {
            query.push(encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));
        }
        ajax.send(url, callback, 'POST', query.join('&'), async)
    };

    function updateStats()
    {
        ajax.get('/api/stats', {}, function (body) {
            var json = JSON.parse(body);

            document.getElementById("stats-players").innerHTML = json.players;
            document.getElementById("stats-customers").innerHTML = json.customers;
            document.getElementById("stats-sales").innerHTML = json.purchases;
            document.getElementById("stats-servers").innerHTML = json.servers;
        })
    }

    setInterval(updateStats, 5000)
    updateStats();
</script>